import random
import threading
import time

# Importa as perguntas de múltipla escolha e dicas
import perguntas_bio
import perguntas_computador

# Definir limite de resposta para cada pergunta
tempo_de_resposta = 5

def mensagem_inicial():

  resp = input("Deseja começar o jogo? (S/N)\n")
  if resp.lower() == "s":
    print("Começando o jogo...")
    for tempo in range(3, 0, -1):
      time.sleep(1)
      print(tempo)
    print("Vamos lá!")

def input_with_timeout(prompt, timeout):
  print(prompt)
  user_input = [""]  # Lista para armazenar a entrada do palpite do usuário

  # Função para receber a entrada do usuário
  def get_input():
    user_input[0] = input("\nResposta: ")

  # Criando uma thread para receber a entrada do usuário
  input_thread = threading.Thread(target=get_input)
  input_thread.start()

  # Aguardando o tempo limite ou até que o usuário forneça uma resposta
  input_thread.join(timeout)

  if user_input[0] is None:
    return None
  else:
    return user_input[0]

# Modo normal, com tempo e sistema de pontuação
def modo_normal(perguntas):

  print("Bem-vindo ao modo normal de Jogo")
  
  mensagem_inicial()

  perguntas = list(perguntas.items())
  random.shuffle(perguntas)

  # Marca a pontuação inicial
  pontuacao = 0

  for pergunta, resposta in perguntas:
      print(pergunta + "\nSe precisar de uma dica digite: dica")
      start_time = time.time()  # Marca o início do tempo para esta pergunta
      while True:
          palpite = input_with_timeout(f"Você tem {tempo_de_resposta} segundos para responder ", tempo_de_resposta)
          if palpite == "dica":
            time_left = tempo_de_resposta - (time.time() - start_time)
            if time_left <= 0:
                print("Tempo esgotado!")
                break
            print(f"{resposta['dica']}\n")
            pontuacao -= 1
            continue
          elif palpite in ["a", "b", "c", "d"]:
              time_left = tempo_de_resposta - (time.time() - start_time)
              if time_left <= 0:
                  print("Tempo esgotado!")
                  break
              if palpite == resposta['resposta'].lower():
                  print("\nCorreto!\n")
                  pontuacao += 2
                  break
              else:
                  print(f"\nIncorreto. A resposta correta é: {resposta['resposta']}.\n")
                  break
          elif palpite is None:
            print("Tempo Esgotado!")
            break
          else:
            time_left = tempo_de_resposta - (time.time() - start_time)
            if time_left <= 0:
                print("\nTempo esgotado!")
                break
            continue
  print(f"\nFim do jogo! Sua pontuação final é: {pontuacao}\n")

# Modo Estudo é idêntico ao modo normal, mas não tem a sistema de pontos e temporizador
def modo_estudo(perguntas):

  print("Bem-vindo ao modo de estudo de Jogo")
  mensagem_inicial()

  perguntas = list(perguntas.items())
  random.shuffle(perguntas)
  
  for pergunta, resposta in perguntas:

    print(pergunta)
    palpite = input("Resposta: ")

    if palpite is not None and palpite.strip().lower() == resposta['resposta'].lower():
      print("Correto!\n")
    elif palpite is not None:
      print(f"Incorreto. A resposta correta é: {resposta['resposta']}.\n")

  print("Fim do jogo!")


def modo_multiplayer(perguntas):

  print("Bem-vindo ao modo multiplayer de Jogo")

  mensagem_inicial()

  perguntas = list(perguntas.items())
  random.shuffle(perguntas)
  
  # define um número de players
  numero_jogadores = int(input("Quantidade de jogadores: >>> "))

  pontos_jogadores = [0] * numero_jogadores

  for i in range(numero_jogadores):
    print(f"Jogador {i+1}\n")

    for pergunta, resposta in perguntas:
      print(pergunta + "\nSe precisar de uma dica digite: dica")
      while True:
          start_time = time.time()  # Marca o início do tempo para esta pergunta
          palpite = input_with_timeout(f"Você tem {tempo_de_resposta} segundos para responder: ", tempo_de_resposta)

          if palpite == "dica":
              print(f"{resposta['dica']}\n")
              pontos_jogadores[i] -= 1
          else:
              if palpite == resposta['resposta'].lower():
                  print("\nCorreto!\n")
                  pontos_jogadores[i] += 2
                  break
              else:
                  print(f"\nIncorreto. A resposta correta é: {resposta['resposta']}.\n")
                  break

          # Calcular o tempo restante após a dica
          time_left = tempo_de_resposta - (time.time() - start_time)
          if time_left <= 0:
              print("Tempo esgotado!")
              continue

  pontos_ganhador = max(pontos_jogadores)
  jogador_ganhador = pontos_jogadores.index(pontos_ganhador)
  print(f"O Jogador {jogador_ganhador+1} ganhou com {pontos_ganhador} pontos!")
  # Mostra a pontuação dos jogadores
  for i in range(numero_jogadores):
    print(f"Jogardor {i+1}: {pontos_jogadores[i]}")


def modo_adptativo(matriz, tema, dificuldade):
  print("Bem-vindo ao modo adaptativo de Jogo")
  
  mensagem_inicial()
  
  # Pontuação inicial 
  pontuacao = 0
  cont = 0
  
  while cont != 9:
  
      perguntas = matriz[dificuldade][tema]
      perguntas = list(perguntas.items())
      random.shuffle(perguntas)
  
      for pergunta, resposta in perguntas:
          print(pergunta + "\nSe precisar de uma dica digite: dica")
  
          while True:
  
              start_time = time.time()  # Marca o início do tempo para esta pergunta
              palpite = input_with_timeout(f"Você tem {tempo_de_resposta} segundos para responder: ", tempo_de_resposta)
  
              if palpite == "dica":
                  print(f"{resposta['dica']}\n")
                  pontuacao -= 1
  
              else:
                  if palpite == resposta['resposta'].lower():
                      print("\nCorreto!\n")
                      pontuacao += 2
                      dificuldade += 1 
                      if dificuldade > 2:
                          dificuldade = 2
  
                      break
  
                  else:
                      print(f"\nIncorreto. A resposta correta é: {resposta['resposta']}.\n")
                      dificuldade -= 1 
                      if dificuldade < 0:
                          dificuldade = 0
  
                      break
  
              # Calcular o tempo restante após a dica
              time_left = tempo_de_resposta - (time.time() - start_time)
              if time_left <= 0:
                  print("Tempo esgotado!") 
                  continue
  
              # Atualizar a dificuldade somente após o usuário responder à pergunta
  
          perguntas.clear()
          perguntas = matriz[dificuldade][tema]
          perguntas = list(perguntas.items())
          random.shuffle(perguntas)
  
      cont += 1    
  print(f"\nFim do jogo! Sua pontuação final é: {pontuacao}")

def menu():
  print("Bem-vindo ao jogo de Perguntas e Respostas!\n")\

  # Matriz para selecionar tema e dificuldade
  matriz =[[perguntas_bio.bio_facil, perguntas_computador.compu_facil ],
          [perguntas_bio.bio_normal, perguntas_computador.compu_normal ],
          [perguntas_bio.bio_dificil, perguntas_computador.compu_dificil ]]

  # Menu para o usuário escolher o tema e a dificuldade de acordo com o número
  tema = int(input("Escolha o tema:\n 1. Biologia\n 2. Computadores\n>>> ")) - 1
  dificuldade = int(input("Escolha a dificuldade:\n 1. Fácil\n 2. Normal\n 3. Difícil\n>>> ")) - 1
  
  perguntas = matriz[dificuldade][tema]

  # Apresenta os modos de jogo para que o usuário escolher de acordo com o número, e descreve como funciona o jogo e a pontuação
  print("Você terá 20 segundos para responder as 5 perguntas, cada pergunta vale 2 pontos, você pode pedir dicas, mas perderá 1 ponto a cada dica usada.\n")
  print("Selecione o modo de jogo:\n")
  print("1. Modo Normal (Jogo normal)\n")
  print("2. Modo Estudo (Revise as perguntas e respostas)\n")
  print("3. Modo Multiplayer (O jogador com a maior pontuação vence)\n")
  print("4. Adaptativo (A dificuldade se ajusta ao jogador)\n")
  print("0. Sair\n")

  opcao = input("Digite o número da opção desejada >>>")

  # Usuário escolhe o modo de jogo de acordo com o número
  match opcao:
    case "0":
      print("Saindo do jogo...")
    case "1":
      modo_normal(perguntas)
    case "2":
      modo_estudo(perguntas)
    case "3":
      modo_multiplayer(perguntas)
    case "4":
      modo_adptativo(perguntas, tema, dificuldade)
    case _:
      print("Opção inválida. Tente novamente. \n")
      menu()

def main():
  menu()

if __name__ == '__main__':
  main()